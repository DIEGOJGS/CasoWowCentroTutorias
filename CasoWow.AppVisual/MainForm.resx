<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>